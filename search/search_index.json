{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"TursoPy  <p> Fully type-hinted Turso Platform API wrapper for Python. </p> <p> </p> <p>Documentation: https://mauricekuenicke.github.io/tursopy/</p> <p>Source Code: https://github.com/MauriceKuenicke/tursopy</p>"},{"location":"#important","title":"\u26a0\ufe0f Important","text":"<p>This project is in early development and currently not safe for use in a production environment. Use at your own risk.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>$ pip install tursopy\n\n\n---&gt; 100%\n\nInstalling collected packages: tursopy\nSuccessfully installed tursopy-0.0.2\n</code></pre>"},{"location":"#example-usage","title":"Example Usage","text":"<pre><code>from tursopy import TursoClient\n\nclient = TursoClient()\nnew_api_token = client.create_platform_api_token(name=\"my-test-token\")  # Create a new platform token\nclient.revoke_token(name=new_api_token.name) # Revoke it again\n\n# You can also create a new database\nnew_db = client.db.create_database(org_name=\"my-org\", name=\"delete-me-later\")\nprint(\"New database:\", new_db)\n\n# List available databases in your organization or for your user\nprint(client.db.list_databases(org_name=\"my-org\"))\nclient.db.delete_database(org_name=\"my-org\", db_name=new_db.Name) # Delete your database again\n</code></pre>"},{"location":"#initial-platform-api-token","title":"Initial Platform API Token","text":"<p>TursoPy assumes a platform api token to be available when running the first time. Please refer to the official documentation to find out how to generate your token.</p>"},{"location":"#response-models","title":"Response Models","text":"<p>TursoPy models mirror the Turso platform API response models as much as possible. This way, you'll always know how to access the data just by looking at the platform documentation. TursoPy sometimes flattens the responses if it makes sense. This happens mostly for response models which only contain a single field with data.</p> <pre><code>$ curl -L https://api.turso.tech/v1/organizations/your-org/databases -H 'Authorization: Bearer YOUR-TOKEN'\n\n{\n  \"databases\": [\n    {\n      \"DbId\": \"0eb771dd-6906-11ee-8553-eaa7715aeaf2\",\n      \"Hostname\": \"your-db-your-org.turso.io\",\n      \"Name\": \"my-db\",\n      \"allow_attach\": true,\n      \"block_reads\": true,\n      \"block_writes\": true,\n      \"group\": \"default\",\n      \"is_schema\": true,\n      \"primaryRegion\": \"lhr\",\n      \"regions\": [\n        \"lhr\",\n        \"bos\",\n        \"nrt\"\n      ],\n      \"schema\": \"&lt;string&gt;\",\n      \"sleeping\": true,\n      \"type\": \"logical\",\n      \"version\": \"0.22.22\"\n    }\n  ]\n}\n</code></pre> <p>In those cases, you'll be able to access the data directly without going through that extra level.</p> <pre><code>from tursopy import TursoClient\n\nclient = TursoClient()\nmy_databases = client.db.list_databases(org_name=\"my-org\")   # (1)\n\nprint(\"Schema:\", my_databases[0].schema)   # (2)\nprint(\"Group:\", my_databases[0].group)\nprint(\"Primary Region:\", my_databases[0].primaryRegion)\n</code></pre> <ol> <li>Returns a list of databases directly</li> <li>Supports code completion</li> </ol>"}]}